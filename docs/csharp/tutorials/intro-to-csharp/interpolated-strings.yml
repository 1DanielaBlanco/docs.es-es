### YamlMime:Tutorial
title: <span data-ttu-id="49076-101">Uso de la interpolación de cadenas para construir cadenas con formato</span><span class="sxs-lookup"><span data-stu-id="49076-101">Use string interpolation to construct formatted strings</span></span>
metadata:
  title: 'Interpolación de cadenas: tutorial interactivo de C#'
  description: En este tutorial se usa el explorador para examinar la característica de interpolación de cadenas de C# de manera interactiva. Escriba código de C# y vea los resultados de la compilación y la ejecución del código directamente en el explorador.
  audience: Developer
  ms.custom: mvc
  ms.date: 08/24/2018
  level: Beginner
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection.yml
  nextTutorialTitle: <span data-ttu-id="49076-105">Colecciones en C#</span><span class="sxs-lookup"><span data-stu-id="49076-105">Collections in C#</span></span>
  ms.openlocfilehash: c8f93bd922b1003aafd50d5e95d92bcb492106c1
  ms.sourcegitcommit: ccd8c36b0d74d99291d41aceb14cf98d74dc9d2b
  ms.translationtype: HT
  ms.contentlocale: es-ES
  ms.lasthandoff: 12/10/2018
  ms.locfileid: "53149216"
items:
- durationInMinutes: 2
  content: >
    <span data-ttu-id="49076-106">En este tutorial se muestra cómo usar la [interpolación de cadenas](../../language-reference/tokens/interpolated.md) para insertar valores en una cadena única.</span><span class="sxs-lookup"><span data-stu-id="49076-106">This tutorial teaches you how to use [string interpolation](../../language-reference/tokens/interpolated.md) to insert values into a single string.</span></span> <span data-ttu-id="49076-107">También aprenderá a controlar el formato de texto de la cadena de resultado.</span><span class="sxs-lookup"><span data-stu-id="49076-107">You also learn how to control text formatting of the result string.</span></span> <span data-ttu-id="49076-108">Se usa el explorador para escribir y ejecutar código de C# y se pueden ver al instante los resultados.</span><span class="sxs-lookup"><span data-stu-id="49076-108">You use your browser to write and run C# code and can immediately see the results.</span></span>
- title: <span data-ttu-id="49076-109">Crear una cadena interpolada</span><span class="sxs-lookup"><span data-stu-id="49076-109">Create an interpolated string</span></span>
  durationInMinutes: 2
  content: "<span data-ttu-id=\"49076-110\">Ejecute el código siguiente en la ventana interactiva.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"49076-111\">Para ello, escriba el código en la ventana interactiva (sustituya `<name>` por su nombre) y seleccione **Ejecutar**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-111\">To do that, type the code in the interactive window (replace `<name>` with your name) and select **Run**:</span></span>\n\n```csharp\nvar name = \"<name>\";\nConsole.WriteLine($\"Hello, {name}. It's a pleasure to meet you!\");\n```\n\n<span data-ttu-id=\"49076-112\">Al ejecutar el código, **Salida** muestra una cadena que incluye su nombre en el saludo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-112\">When you run the code, **Output** displays a string that includes your name in the greeting.</span></span> <span data-ttu-id=\"49076-113\">El argumento de cadena de la llamada al método <xref:System.Console.WriteLine%2A> es una *cadena interpolada*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-113\">The string argument of the <xref:System.Console.WriteLine%2A> method call is an *interpolated string*.</span></span> <span data-ttu-id=\"49076-114\">Es un tipo de plantilla que permite construir una sola cadena (denominada *cadena de resultado*) a partir de una cadena que incluye código incrustado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-114\">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id=\"49076-115\">Las cadenas interpoladas son especialmente útiles para insertar valores en una cadena o para concatenar (unir entre sí) varias cadenas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-115\">Interpolated strings are particularly useful for inserting values into a string or concatenating (joining together) several strings.</span></span> \n\n<span data-ttu-id=\"49076-116\">El ejemplo anterior contiene los dos elementos que debe tener toda cadena interpolada:</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-116\">The example above contains the two elements that every interpolated string must have:</span></span> \n\n- <span data-ttu-id=\"49076-117\">Un literal de cadena que empieza con el carácter `$` antes del carácter de comillas de apertura.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-117\">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id=\"49076-118\">No puede haber ningún espacio entre el símbolo `$` y el carácter de comillas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-118\">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id=\"49076-119\">(Si quiere ver qué ocurre si incluye uno, inserte un espacio después del carácter `$` en la ventana interactiva y ejecute el código actualizado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-119\">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and run the updated code.</span></span> <span data-ttu-id=\"49076-120\">El compilador de C# muestra el error: \"Carácter no esperado '$'\").</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-120\">The C# compiler complains, \"Unexpected character '$'\".)</span></span> \n\n- <span data-ttu-id=\"49076-121\">Una o varias *expresiones interpoladas*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-121\">One or more *interpolated expressions*.</span></span> <span data-ttu-id=\"49076-122\">Una expresión interpolada se indica mediante una llave de apertura y de cierre (`{` y `}`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-122\">An interpolated expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id=\"49076-123\">Puede colocar cualquier expresión de C# que devuelva un valor (incluido `null`) dentro de las llaves.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-123\">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span> \n\n<span data-ttu-id=\"49076-124\">Probemos algunos ejemplos más de interpolación de cadenas con otros tipos de datos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-124\">Let's try a few more string interpolation examples with some other data types.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"49076-125\">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-125\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"49076-126\">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-126\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="49076-127">Incluir diferentes tipos de datos</span><span class="sxs-lookup"><span data-stu-id="49076-127">Include different data types</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"49076-128\">En el paso anterior, se ha usado una interpolación de cadena para insertar una cadena dentro de otra.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-128\">In the previous step, you used string interpolation to insert one string inside of another.</span></span> <span data-ttu-id=\"49076-129\">Pero el resultado de una expresión interpolada puede ser cualquier tipo de datos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-129\">The result of an interpolated expression can be of any data type, though.</span></span> <span data-ttu-id=\"49076-130\">Vamos a incluir valores de distintos tipos de datos en una cadena interpolada.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-130\">Let's include values of various data types in an interpolated string.</span></span> \n\n<span data-ttu-id=\"49076-131\">En el ejemplo siguiente, en primer lugar se define un tipo de datos de [clase](../../programming-guide/classes-and-structs/classes.md) `Vegetable` que tiene una [propiedad ](../../properties.md) `Name` y un [método](../../methods.md) `ToString` que [reemplaza](../../language-reference/keywords/override.md) el comportamiento del método <xref:System.Object.ToString?displayProperty=nameWithType>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-131\">In the following example, we first define a [class](../../programming-guide/classes-and-structs/classes.md) data type `Vegetable` that has a `Name` [property](../../properties.md) and a `ToString` [method](../../methods.md), which [overrides](../../language-reference/keywords/override.md) the behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id=\"49076-132\">El [`public`modificador de acceso](../../language-reference/keywords/public.md) pone ese método a disposición de cualquier código de cliente para obtener la representación de la cadena de una instancia de `Vegetable`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-132\">The [`public` access modifier](../../language-reference/keywords/public.md) makes that method available to any client code to get the string representation of a `Vegetable` instance.</span></span> <span data-ttu-id=\"49076-133\">En el ejemplo, el método `Vegetable.ToString` devuelve el valor de la propiedad `Name` que se inicializa en el [constructor](../../programming-guide/classes-and-structs/constructors.md) `Vegetable`: `Vegetable(string name) => Name = name;`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-133\">In the example the `Vegetable.ToString` method returns the value of the `Name` property that is initialized at the `Vegetable` [constructor](../../programming-guide/classes-and-structs/constructors.md): `Vegetable(string name) => Name = name;`.</span></span> <span data-ttu-id=\"49076-134\">Luego se crea una instancia de la clase `Vegetable` denominada `item` al usar la [palabra clave `new`](../../language-reference/keywords/new-operator.md) y al proporcionar un parámetro de nombre para el constructor `Vegetable`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-134\">Then we create an instance of the `Vegetable` class named `item` by using the [`new` keyword](../../language-reference/keywords/new-operator.md) and providing a name for the constructor `Vegetable`.</span></span> <span data-ttu-id=\"49076-135\">Por último, se incluye esa instancia en una cadena interpolada que también contiene un valor <xref:System.DateTime>, un valor <xref:System.Decimal> y un valor de [enumeración](../../programming-guide/enumeration-types.md) `Unit`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-135\">Finally, we include that instance into an interpolated string that also contains a <xref:System.DateTime> value, a <xref:System.Decimal> value, and a `Unit` [enumeration](../../programming-guide/enumeration-types.md) value.</span></span> <span data-ttu-id=\"49076-136\">Ejecute el código siguiente en la ventana interactiva:</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-136\">Run the following code in the interactive window:</span></span>\n\n```csharp\npublic class Vegetable\n{\n   public Vegetable(string name) => Name = name;\n\n   public string Name { get; }\n\n   public override string ToString() => Name;\n}\n\npublic enum Unit { item, kilogram, gram, dozen };\n\nvar item = new Vegetable(\"eggplant\");\nvar date = DateTime.Now;\nvar price = 1.99m;\nvar unit = Unit.item;\nConsole.WriteLine($\"On {date}, the price of {item} was {price} per {unit}.\");\n```\n\n<span data-ttu-id=\"49076-137\">Observe que la expresión interpolada `item` de la cadena interpolada se resuelve en el texto \"eggplant\" en la cadena de resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-137\">Note that the interpolated expression `item` in the interpolated string resolves to the text \"eggplant\" in the result string.</span></span> <span data-ttu-id=\"49076-138\">Esto se debe a que, cuando el tipo del resultado de la expresión no es una cadena, el resultado se resuelve en una cadena de la siguiente manera:</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-138\">That's because, when the type of the expression result is not a string, the result is resolved to a string in the following way:</span></span>\n\n- <span data-ttu-id=\"49076-139\">Si la expresión interpolada se evalúa en `null`, se usa una cadena vacía (\"\", o <xref:System.String.Empty?displayProperty=nameWithType>).</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-139\">If the interpolated expression evaluates to `null`, an empty string (\"\", or <xref:System.String.Empty?displayProperty=nameWithType>) is used.</span></span>\n\n- <span data-ttu-id=\"49076-140\">Si la expresión interpolada no se evalúa en `null`, se suele llamar al método `ToString` del tipo de resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-140\">If the interpolated expression doesn't evaluate to `null`, typically the `ToString` method of the result type is called.</span></span> <span data-ttu-id=\"49076-141\">Puede probar esto mediante la actualización de la implementación del método `Vegetable.ToString`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-141\">You can test this by updating the implementation of the `Vegetable.ToString` method.</span></span> <span data-ttu-id=\"49076-142\">Podría incluso no implementar el método `ToString`, puesto que cada tipo de datos tiene alguna implementación de este método.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-142\">You might not even need to implement the `ToString` method since every type has some implementation of this method.</span></span> <span data-ttu-id=\"49076-143\">Para probar esto, comente la definición del método `Vegetable.ToString` del ejemplo (para ello, coloque delante un símbolo de comentario `//`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-143\">To test this, comment out the definition of the `Vegetable.ToString` method in the example (to do that, put a comment symbol, `//`, in front of it).</span></span> <span data-ttu-id=\"49076-144\">En el resultado, la cadena \"eggplant\" se reemplaza por el nombre de tipo completo (el espacio de nombres definido por REPL de C# junto con el nombre de tipo), que es el comportamiento predeterminado del método <xref:System.Object.ToString?displayProperty=nameWithType>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-144\">In the output, the string \"eggplant\" is replaced by the fully qualified type name (the namespace defined by the C# REPL along with the type name), which is the default behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id=\"49076-145\">El comportamiento predeterminado del método `ToString` para un valor de enumeración es devolver la representación de cadena del valor.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-145\">The default behavior of the `ToString` method for an enumeration value is to return the string representation of the value.</span></span>    \n\n<span data-ttu-id=\"49076-146\">En el resultado de este ejemplo, la fecha es demasiado precisa (el precio de \"eggplant\" no varía por segundos) y el valor del precio no indica una unidad de moneda.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-146\">In the output from this example, the date is too precise (the price of eggplant doesn't change every second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id=\"49076-147\">En el paso siguiente se aprende a corregir esos problemas al controlar el formato de representaciones de cadena de los resultados de la expresión.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-147\">In the next step, you'll learn how to fix those issues by controlling the format of string representations of the expression results.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"49076-148\">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-148\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"49076-149\">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"49076-149\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="49076-150">Controlar el formato de expresiones interpoladas</span><span class="sxs-lookup"><span data-stu-id="49076-150">Control the formatting of interpolated expressions</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="49076-151">En el paso anterior se han insertado en la cadena de resultado dos cadenas con formato incorrecto.</span><span class="sxs-lookup"><span data-stu-id="49076-151">In the previous step, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id="49076-152">Una era un valor de fecha y hora en la que solo la fecha era apropiada.</span><span class="sxs-lookup"><span data-stu-id="49076-152">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id="49076-153">La segunda era un precio que no indicaba su unidad de moneda.</span><span class="sxs-lookup"><span data-stu-id="49076-153">The second was a price that didn't indicate its unit of currency.</span></span> <span data-ttu-id="49076-154">Ambos problemas se podían solucionar fácilmente.</span><span class="sxs-lookup"><span data-stu-id="49076-154">Both issues are easy to address.</span></span> <span data-ttu-id="49076-155">La interpolación de cadena permite especificar *cadenas de formato* que controlan el formato de tipos específicos.</span><span class="sxs-lookup"><span data-stu-id="49076-155">String interpolation lets you specify *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id="49076-156">Modifique la llamada a `Console.WriteLine` del ejemplo anterior para incluir las cadenas de formato para las expresiones de fecha y precio, como se muestra en la siguiente línea:</span><span class="sxs-lookup"><span data-stu-id="49076-156">Modify the call to `Console.WriteLine` from the previous example to include the format strings for the date and price expressions as shown in the following line:</span></span>


    ```csharp

    Console.WriteLine($"On {date:d}, the price of {item} was {price:C2} per {unit}.");

    ```


    <span data-ttu-id="49076-157">Especifique una cadena de formato al colocar después de la expresión interpolada dos puntos (":") y la cadena de formato.</span><span class="sxs-lookup"><span data-stu-id="49076-157">You specify a format string by following the interpolated expression with a colon (":") and the format string.</span></span> <span data-ttu-id="49076-158">"d" es una [cadena de formato de fecha y hora estándar](../../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) que representa el formato de fecha corta.</span><span class="sxs-lookup"><span data-stu-id="49076-158">"d" is a [standard date and time format string](../../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id="49076-159">"C2" es una [cadena de formato numérica estándar](../../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) que representa un número como un valor de moneda con dos dígitos después del separador decimal.</span><span class="sxs-lookup"><span data-stu-id="49076-159">"C2" is a [standard numeric format string](../../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>


    <span data-ttu-id="49076-160">Una serie de tipos de las bibliotecas de .NET admiten un conjunto predefinido de cadenas de formato.</span><span class="sxs-lookup"><span data-stu-id="49076-160">A number of types in the .NET libraries support a predefined set of format strings.</span></span> <span data-ttu-id="49076-161">Esto incluye todos los tipos numéricos y los tipos de fecha y hora.</span><span class="sxs-lookup"><span data-stu-id="49076-161">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id="49076-162">Para obtener una lista completa de los tipos que admiten cadenas de formato, vea [Dar formato a cadenas y tipos de biblioteca de clase .NET](../../../standard/base-types/formatting-types.md#stringRef) en el artículo [Aplicar formato a tipos de .NET](../../../standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="49076-162">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../../standard/base-types/formatting-types.md) article.</span></span>


    <span data-ttu-id="49076-163">Pruebe a modificar las cadenas de formato del ejemplo para ver cómo afectan al formato de fecha y hora y al valor numérico.</span><span class="sxs-lookup"><span data-stu-id="49076-163">Try modifying the format strings in the example to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id="49076-164">Cambie "d" en `{date:d}` a "t" (para mostrar el formato de hora corta), "y" (para mostrar el año y el mes) y "yyyy" (para mostrar el año como un número de cuatro dígitos).</span><span class="sxs-lookup"><span data-stu-id="49076-164">Change the "d" in `{date:d}` to "t" (to display the short time format), "y" (to display the year and month), and "yyyy" (to display the year as a four-digit number).</span></span> <span data-ttu-id="49076-165">Cambie "C2" en `{price:C2}` a "e" (para la notación exponencial) y "F3" (para un valor numérico con tres dígitos después del separador decimal).</span><span class="sxs-lookup"><span data-stu-id="49076-165">Change the "C2" in `{price:C2}` to "e" (for exponential notation) and "F3" (for a numeric value with three digits after the decimal point).</span></span>


    <span data-ttu-id="49076-166">Además de controlar el formato, también puede controlar el ancho de campo y la alineación de las cadenas con formato incluidas en la cadena de resultado.</span><span class="sxs-lookup"><span data-stu-id="49076-166">In addition to controlling formatting, you can also control the field width and alignment of the formatted strings that are included in the result string.</span></span> <span data-ttu-id="49076-167">En el paso siguiente aprenderá a hacerlo.</span><span class="sxs-lookup"><span data-stu-id="49076-167">In the next step, you'll learn how to do this.</span></span>


    > [!NOTE]

    > <span data-ttu-id="49076-168">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class="sxs-lookup"><span data-stu-id="49076-168">This online coding experience is in preview mode.</span></span> <span data-ttu-id="49076-169">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="49076-169">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="49076-170">Controlar el ancho de campo y la alineación de expresiones interpoladas</span><span class="sxs-lookup"><span data-stu-id="49076-170">Control the field width and alignment of interpolated expressions</span></span>
  durationInMinutes: 6
  content: >
    <span data-ttu-id="49076-171">Normalmente, cuando el resultado de una expresión interpolada tiene formato de cadena, esa cadena se incluye en una cadena de resultado sin espacios iniciales ni finales.</span><span class="sxs-lookup"><span data-stu-id="49076-171">Ordinarily, when the result of an interpolated expression is formatted to string, that string is included in a result string without leading or trailing spaces.</span></span> <span data-ttu-id="49076-172">Especialmente cuando se trabaja con un conjunto de datos, el poder controlar el ancho de un campo y la alineación del texto ayuda a generar una salida más legible.</span><span class="sxs-lookup"><span data-stu-id="49076-172">Particularly when you work with a set of data, being able to control a field width and text alignment helps to produce a more readable output.</span></span> <span data-ttu-id="49076-173">Para ver esto, ejecute el siguiente código:</span><span class="sxs-lookup"><span data-stu-id="49076-173">To see this, run the following code:</span></span>


    ```csharp
      var inventory = new Dictionary<string, int>()
      {
          ["hammer, ball pein"] = 18,
          ["hammer, cross pein"] = 5,
          ["screwdriver, Phillips #2"] = 14
      };

      Console.WriteLine($"Inventory on {DateTime.Now:d}");
      Console.WriteLine(" ");
      Console.WriteLine($"|{"Item",-25}|{"Quantity",10}|");
      foreach (var item in inventory)
         Console.WriteLine($"|{item.Key,-25}|{item.Value,10}|");
    ```


    <span data-ttu-id="49076-174">Los nombres de elemento están alineados a la izquierda y sus cantidades están alineadas a la derecha.</span><span class="sxs-lookup"><span data-stu-id="49076-174">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id="49076-175">Para especificar la alineación, se agrega una coma (",") después de una expresión interpolada y se designa el ancho de campo *mínimo*.</span><span class="sxs-lookup"><span data-stu-id="49076-175">You specify the alignment by adding a comma (",") after an interpolated expression and designating the *minimum* field width.</span></span> <span data-ttu-id="49076-176">Si el valor especificado es un número positivo, el campo se alinea a la derecha.</span><span class="sxs-lookup"><span data-stu-id="49076-176">If the specified value is a positive number, the field is right-aligned.</span></span> <span data-ttu-id="49076-177">Si es un número negativo, el campo se alinea a la izquierda.</span><span class="sxs-lookup"><span data-stu-id="49076-177">If it is a negative number, the field is left-aligned.</span></span>


    <span data-ttu-id="49076-178">Pruebe a quitar los signos negativos del código `{"Item",-25}` e `{item.Key,-25}` y vuelva a ejecutar el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="49076-178">Try removing the negative signs from the `{"Item",-25}` and `{item.Key,-25}` code and run the example again.</span></span> <span data-ttu-id="49076-179">En esta ocasión, los nombres de elemento se alinean a la derecha.</span><span class="sxs-lookup"><span data-stu-id="49076-179">This time, the item names are right-aligned.</span></span>


    <span data-ttu-id="49076-180">Puede combinar un especificador de alineación y una cadena de formato en una única expresión interpolada.</span><span class="sxs-lookup"><span data-stu-id="49076-180">You can combine an alignment specifier and a format string for a single interpolated expression.</span></span> <span data-ttu-id="49076-181">Para ello, especifique primero la alineación, seguida de dos puntos y la cadena de formato.</span><span class="sxs-lookup"><span data-stu-id="49076-181">To do that, specify the alignment first, followed by a colon and the format string.</span></span> <span data-ttu-id="49076-182">Pruebe el siguiente código que muestra tres cadenas con formato con anchos de campo definidos:</span><span class="sxs-lookup"><span data-stu-id="49076-182">Try the following code that displays three formatted strings with defined field widths:</span></span>


    ```csharp

    Console.WriteLine($"[{DateTime.Now,-20:d}] Hour [{DateTime.Now,-10:HH}] [{1063.342,15:N2}] feet");

    ```


    > [!NOTE]

    > <span data-ttu-id="49076-183">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class="sxs-lookup"><span data-stu-id="49076-183">This online coding experience is in preview mode.</span></span> <span data-ttu-id="49076-184">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="49076-184">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: >-
    <span data-ttu-id="49076-185">Ha completado el tutorial interactivo sobre interpolación de cadenas.</span><span class="sxs-lookup"><span data-stu-id="49076-185">You've completed the string interpolation interactive tutorial.</span></span> <span data-ttu-id="49076-186">Puede hacer clic en el vínculo \*\*Números en C# \*\* siguiente para iniciar el siguiente tutorial interactivo, o bien puede visitar el [sitio de .NET](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial) para descargar el SDK de .NET Core, crear un proyecto en el equipo y continuar la codificación.</span><span class="sxs-lookup"><span data-stu-id="49076-186">You can click the **Collections in C#** link below to start the next interactive tutorial, or you can visit the [.NET site](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial) to download the .NET Core SDK, create a project on your machine, and keep coding.</span></span> <span data-ttu-id="49076-187">El paso "Mantenimiento del aprendizaje" le lleva de vuelta a estos tutoriales.</span><span class="sxs-lookup"><span data-stu-id="49076-187">The "Keep Learning" step brings you back to these tutorials.</span></span>


    <span data-ttu-id="49076-188">Para más información, vea [Interpolación de cadenas](../../language-reference/tokens/interpolated.md).</span><span class="sxs-lookup"><span data-stu-id="49076-188">For more information, see [String interpolation](../../language-reference/tokens/interpolated.md).</span></span>
