### YamlMime:Tutorial
title: <span data-ttu-id="41005-101">Cadenas interpoladas en C#</span><span class="sxs-lookup"><span data-stu-id="41005-101">Interpolated strings in C#</span></span>
metadata:
  title: 'Tutorial interactivo de cadenas interpoladas: tutoriales rápidos de C#'
  description: En este tutorial, usará el explorador para utilizar la característica de cadena interpolada de C# de manera interactiva. Escriba código de C# y vea los resultados de la compilación y la ejecución del código directamente en el explorador.
  audience: Developer
  ms.custom: mvc
  ms.topic: get-started-article
  level: Beginner
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection
  nextTutorialTitle: <span data-ttu-id="41005-105">Colecciones en C#</span><span class="sxs-lookup"><span data-stu-id="41005-105">Collections in C#</span></span>
  ms.openlocfilehash: 7e1de34c9075826a6fcb6bf71cb01bfbd5c215ca
  ms.sourcegitcommit: 935d5267c44f9bce801468ef95f44572f1417e8c
  ms.translationtype: HT
  ms.contentlocale: es-ES
  ms.lasthandoff: 03/28/2018
items:
- durationInMinutes: 2
  content: >
    <span data-ttu-id="41005-106">En este inicio rápido aprenderá a usar cadenas interpoladas en C# para insertar valores en una cadena de salida única de forma interactiva.</span><span class="sxs-lookup"><span data-stu-id="41005-106">This quickstart teaches you how to use interpolated strings in C# to insert values into a single ouput string interactively.</span></span> <span data-ttu-id="41005-107">Se usa el explorador para escribir código de C#, lo que permite ver al instante los resultados de compilar y ejecutar el código.</span><span class="sxs-lookup"><span data-stu-id="41005-107">You use your browser to write C# code and can immediately see the results of compiling and running your code.</span></span> <span data-ttu-id="41005-108">El inicio rápido contiene una serie de lecciones que concatenan cadenas, insertan valores en cadenas y dan formato a estos valores de maneras diferentes.</span><span class="sxs-lookup"><span data-stu-id="41005-108">The quickstart contains a series of lessons that concatenate strings, insert values into strings, and format those values in different ways.</span></span>
- title: <span data-ttu-id="41005-109">Crear una cadena interpolada</span><span class="sxs-lookup"><span data-stu-id="41005-109">Create an interpolated string</span></span>
  durationInMinutes: 2
  content: "<span data-ttu-id=\"41005-110\">Ejecute el código siguiente en la ventana interactiva.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"41005-111\">Para ello, escriba el siguiente bloque de código en la ventana interactiva (reemplace \"\\<name>\" con su nombre) y haga clic en el botón **Ejecutar**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-111\">To do that, type the following code block in the interactive window (replace \"\\<name>\" with your name) and click the **Run** button:</span></span>\n\n```csharp\nvar name = \"<name>\";\nConsole.WriteLine($\"Hello, {name}. It's a pleasure to meet you!\");\n```\n\n<span data-ttu-id=\"41005-112\">Al ejecutar el programa, se muestra una cadena única que incluye su nombre en el saludo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-112\">When you run the program, it displays a single string that includes your name in the greeting.</span></span> <span data-ttu-id=\"41005-113\">La cadena que se incluye en la llamada al método <xref:System.Console.WriteLine%2A> es una *cadena interpolada*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-113\">The string included in the <xref:System.Console.WriteLine%2A> method call is an *interpolated string*.</span></span> <span data-ttu-id=\"41005-114\">Es un tipo de plantilla que permite construir una sola cadena (denominada *cadena de resultado*) a partir de una cadena que incluye código incrustado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-114\">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id=\"41005-115\">Las cadenas interpoladas son especialmente útiles para insertar valores en una cadena o en cadenas concatenadas (unidas entre sí).</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-115\">Interpolated strings are particularly useful for inserting values into a string or concatenating (joining together) strings.</span></span> \n\n<span data-ttu-id=\"41005-116\">Este sencillo ejemplo contiene los dos elementos que debe tener cada cadena interpolada:</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-116\">This simple example contains the two elements that every interpolated string must have:</span></span> \n\n- <span data-ttu-id=\"41005-117\">Un literal de cadena que empieza con el carácter `$` antes del carácter de comillas de apertura.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-117\">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id=\"41005-118\">No puede haber ningún espacio entre el símbolo `$` y el carácter de comillas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-118\">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id=\"41005-119\">(Si quiere ver qué ocurre si incluye uno, inserte un espacio después del carácter `$` en la ventana interactiva y haga clic en el botón **Ejecutar**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-119\">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and click the **Run** button.</span></span> <span data-ttu-id=\"41005-120\">El compilador de C# muestra el error: \"Carácter no esperado '$'\").</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-120\">The C# compiler complains, \"Unexpected character '$'\".)</span></span> \n\n- <span data-ttu-id=\"41005-121\">Una o varias *expresiones interpoladas*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-121\">One or more *interpolated expressions*.</span></span> <span data-ttu-id=\"41005-122\">Una expresión interpolada se indica mediante una llave de apertura y de cierre (`{` y `}`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-122\">An interpolated expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id=\"41005-123\">Puede colocar cualquier expresión de C# que devuelva un valor (incluido `null`) dentro de las llaves.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-123\">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span> \n\n<span data-ttu-id=\"41005-124\">Probemos algunos ejemplos más de cadenas interpoladas con otros tipos de datos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-124\">Let's try a few more interpolated string examples with some other data types.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"41005-125\">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-125\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"41005-126\">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-126\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="41005-127">Incluir diferentes tipos de datos</span><span class="sxs-lookup"><span data-stu-id="41005-127">Include different data types</span></span>
  durationInMinutes: 3
  content: "<span data-ttu-id=\"41005-128\">En el inicio rápido anterior, usó una cadena interpolada para insertar una cadena dentro de otra.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-128\">In the previous quickstart, you used an interpolated string to insert one string inside of another.</span></span> <span data-ttu-id=\"41005-129\">Una expresión de cadena interpolada puede ser cualquier tipo de datos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-129\">An interpolated string expression can be any data type, though.</span></span> <span data-ttu-id=\"41005-130\">Probemos una cadena interpolada que tiene valores de varios tipos de datos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-130\">Let's try an interpolated string that has values of multiple data types.</span></span> \n\n<span data-ttu-id=\"41005-131\">En este ejemplo se incluyen expresiones interpoladas con un objeto `Vegetable`, un miembro de la enumeración `Unit`, un valor <xref:System.DateTime> y un valor <xref:System.Decimal>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-131\">The following example includes interpolated expressions with a `Vegetable` object, a member of the `Unit` enumeration, a <xref:System.DateTime> value, and a <xref:System.Decimal> value.</span></span> <span data-ttu-id=\"41005-132\">Ejecútela en la ventana interactiva.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-132\">Run it in the interactive window.</span></span>\n\n```csharp\npublic class Vegetable\n{\n   public Vegetable(string name) => Name = name;\n\n   public string Name { get; }\n\n   public override string ToString() => Name;\n}\n\npublic class Example\n{\n   public enum Unit { item, pound, ounce, dozen };\n\n   public static void Main()\n   {\n      var item = new Vegetable(\"eggplant\");\n      var date = DateTime.Now;\n      var price = 1.99m;\n      var unit = Unit.item;\n      Console.WriteLine($\"On {date}, the price of {item} was {price} per {unit}.\");\n   }\n}\n```\n\n<span data-ttu-id=\"41005-133\">Tenga en cuenta que una de las expresiones interpoladas incluye el objeto `item` en la cadena de resultado que se muestra en la consola y, en este caso, se inserta la cadena \"eggplant\" en la cadena de resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-133\">Note that one of the interpolated expressions includes the `item` object in the result string that's displayed to the console, and in this case the string \"eggplant\" is inserted into the result string.</span></span> <span data-ttu-id=\"41005-134\">La razón de esto es que, cuando el tipo de una expresión interpolada no es una cadena, el compilador de C# hace lo siguiente:</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-134\">That's because, when the type of an interpolated expression is not a string, the C# compiler does the following:</span></span>\n\n- <span data-ttu-id=\"41005-135\">Si la expresión interpolada es `null`, la expresión interpolada devuelve una cadena vacía (\"\" o <xref:System.String.Empty?displayProperty=nameWithType>).</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-135\">If the interpolated expression is `null`, the interpolated expression returns an empty string (\"\", or <xref:System.String.Empty?displayProperty=nameWithType>).</span></span>\n\n- <span data-ttu-id=\"41005-136\">Si la expresión interpolada no es `null`, se llama al método `ToString` del tipo de la expresión interpolada.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-136\">If the interpolated expression is not `null`, the `ToString` method of the type of the interpolated expression is called.</span></span> <span data-ttu-id=\"41005-137\">Para probar esto, inserte un comentario en la definición del método `Vegetable.ToString` colocando delante de él un símbolo de comentario (`//`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-137\">You can test this by commenting out the definition of the `Vegetable.ToString` method in the example by putting a comment symbol (`//`) in front of it.</span></span> <span data-ttu-id=\"41005-138\">En el resultado, la cadena \"eggplant\" se reemplaza por el nombre de tipo completo (el espacio de nombres definido por REPL de C# junto con el nombre de tipo), que es el comportamiento predeterminado del método <xref:System.Object.ToString?displayProperty=nameWithType>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-138\">In the output, the string \"eggplant\" is replaced by the fully qualified type name (the namespace defined by the C# REPL along with the type name), which is the default behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span>   \n\n<span data-ttu-id=\"41005-139\">En el resultado de este ejemplo, la fecha es demasiado precisa (el precio de \"eggplant\" no varía por segundos) y el valor del precio no indica una unidad de moneda.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-139\">In the output from this example, the date is too precise (the price of eggplant does not vary by the second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id=\"41005-140\">En el paso siguiente, aprenderá a corregir esos problemas controlando el formato de cadenas devueltas por expresiones interpoladas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-140\">In the next step, you'll learn how to fix those issues by controlling the format of strings returned by interpolated expressions.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"41005-141\">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-141\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"41005-142\">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-142\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="41005-143">Controlar el formato de expresiones interpoladas</span><span class="sxs-lookup"><span data-stu-id="41005-143">Control the formatting of interpolated expressions</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="41005-144">En la lección anterior, se insertaron en la cadena de resultado dos cadenas con formato incorrecto.</span><span class="sxs-lookup"><span data-stu-id="41005-144">In the previous lesson, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id="41005-145">Una era un valor de fecha y hora en la que solo la fecha era apropiada.</span><span class="sxs-lookup"><span data-stu-id="41005-145">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id="41005-146">La segunda era un precio que no indicaba su unidad de moneda.</span><span class="sxs-lookup"><span data-stu-id="41005-146">The second was a price that did not indicate its unit of currency.</span></span> <span data-ttu-id="41005-147">Ambos problemas se podían solucionar fácilmente.</span><span class="sxs-lookup"><span data-stu-id="41005-147">Both issues are easy to address.</span></span> <span data-ttu-id="41005-148">Las expresiones interpoladas pueden incluir *cadenas de formato* que controlan el formato de tipos específicos.</span><span class="sxs-lookup"><span data-stu-id="41005-148">Interpolated expressions can include *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id="41005-149">Modifique la llamada a `Console.WriteLine` desde el ejemplo anterior para incluir el especificador de formato para los campos de fecha y precio, tal y como se muestra en esta línea:</span><span class="sxs-lookup"><span data-stu-id="41005-149">Modify the call to `Console.WriteLine` from the previous example to include the format specifier for the date and price fields as shown in the following line:</span></span>


    ```csharp

    Console.WriteLine($"On {date:d}, the price of {item} was {price:C2} per {unit}.");

    ```


    <span data-ttu-id="41005-150">Especifique una cadena de formato siguiendo la expresión interpolada con dos puntos y la cadena de formato.</span><span class="sxs-lookup"><span data-stu-id="41005-150">You specify a format string by following the interpolated expression with a colon and the format string.</span></span> <span data-ttu-id="41005-151">"d" es una [cadena de formato de fecha y hora estándar](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) que representa el formato de fecha corta.</span><span class="sxs-lookup"><span data-stu-id="41005-151">"d" is a [standard date and time format string](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id="41005-152">"C2" es una [cadena de formato numérico estándar](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) que representa un número como un valor de moneda con dos dígitos después del separador decimal.</span><span class="sxs-lookup"><span data-stu-id="41005-152">"C2" is a  [standard numeric format string](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>


    <span data-ttu-id="41005-153">Un determinado número de tipos en las bibliotecas de .NET Standard admite un conjunto predefinido de cadenas de formato.</span><span class="sxs-lookup"><span data-stu-id="41005-153">A number of types in the .NET Standard libraries support a predefined set of format strings.</span></span> <span data-ttu-id="41005-154">Esto incluye todos los tipos numéricos y los tipos de fecha y hora.</span><span class="sxs-lookup"><span data-stu-id="41005-154">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id="41005-155">Para obtener una lista completa de los tipos que admiten cadenas de formato, vea [Dar formato a cadenas y tipos de biblioteca de clase .NET](../../standard/base-types/formatting-types.md#stringRef) en el artículo [Aplicar formato a tipos de .NET](../../standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="41005-155">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span> <span data-ttu-id="41005-156">Cualquier tipo puede admitir un conjunto de cadenas de formato y también puede desarrollar extensiones de formato personalizadas que proporcionan el formato personalizado para los tipos existentes.</span><span class="sxs-lookup"><span data-stu-id="41005-156">Any type can support a set of format strings, and you can also develop custom formatting extensions that provide custom formatting for existing types.</span></span> <span data-ttu-id="41005-157">Para más información sobre el formato personalizado mediante una implementación de <xref:System.ICustomFormatter>, vea [Formato personalizado con ICustomFormatter](../../standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter) en el artículo [Aplicar formato a tipos de .NET](../../standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="41005-157">For information on custom formatting by providing an <xref:System.ICustomFormatter> implementation, see [Custom Formatting with ICustomFormatter](../../standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span>


    <span data-ttu-id="41005-158">Pruebe a modificar las cadenas de formato en el **Editor de .NET** para ver cómo afectan al formato de fecha y hora y al valor numérico.</span><span class="sxs-lookup"><span data-stu-id="41005-158">Try modifying the format strings in the **.NET Editor** to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id="41005-159">Cambie "d" en `{date:d}` a "t" (para mostrar el formato de hora corta), "y" (para mostrar el año y el mes) y "yyyy" (para mostrar el año como un número de cuatro dígitos).</span><span class="sxs-lookup"><span data-stu-id="41005-159">Change the "d" in `{date:d}` to "t" (to display the short time format), "y" (to display the year and month), and "yyyy" (to display the year as a four-digit number).</span></span> <span data-ttu-id="41005-160">Cambie "C2" en `{price:C2}` a "e" (para la notación exponencial) y "F3" (para un valor numérico con tres dígitos después del separador decimal).</span><span class="sxs-lookup"><span data-stu-id="41005-160">Change the "C2" in `{price:C2}` to "e" (for exponential notation) and "F3" (for a numeric value with three digits after the decimal point).</span></span>


    <span data-ttu-id="41005-161">Además de controlar el formato, también puede controlar el ancho de campo y la alineación de las cadenas devueltas por una expresión interpolada.</span><span class="sxs-lookup"><span data-stu-id="41005-161">In addition to controlling formatting, you can also control the field width and alignment of the strings returned by an interpolated expression.</span></span> <span data-ttu-id="41005-162">En el paso siguiente aprenderá a hacerlo.</span><span class="sxs-lookup"><span data-stu-id="41005-162">In the next step, you'll learn how to do this.</span></span>


    > [!NOTE]

    > <span data-ttu-id="41005-163">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class="sxs-lookup"><span data-stu-id="41005-163">This online coding experience is in preview mode.</span></span> <span data-ttu-id="41005-164">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="41005-164">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="41005-165">Controlar el ancho de campo y la alineación de expresiones interpoladas</span><span class="sxs-lookup"><span data-stu-id="41005-165">Control the field width and alignment of interpolated expressions</span></span>
  durationInMinutes: 6
  content: "<span data-ttu-id=\"41005-166\">Normalmente, cuando la cadena devuelta por una expresión interpolada se incluye en una cadena de resultado, no tiene espacios iniciales ni finales.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-166\">Ordinarily, when the string returned by an interpolated expression is included in a result string, it has no leading or trailing spaces.</span></span> <span data-ttu-id=\"41005-167\">Especialmente para instancias en las que se trabaja con un conjunto de datos, las expresiones interpoladas permiten especificar un ancho de campo y su alineación.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-167\">Particularly for instances in which you are working with a set of data, interpolated expressions let you specify a field width and its alignment.</span></span> <span data-ttu-id=\"41005-168\">Para ver esto, ejecute este código.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-168\">To see this, run the following code.</span></span>\n\n```csharp\n  var inventory = new Dictionary<string, int>();\n  inventory.Add(\"hammer, ball pein\", 18);\n  inventory.Add(\"hammer, cross pein\", 5);\n  inventory.Add(\"screwdriver, Phillips #2\", 14);\n\n  Console.WriteLine($\"Inventory on {DateTime.Now:d}\");\n  Console.WriteLine(\" \");\n  Console.WriteLine($\"{\"Item\",-25}    {\"Quantity\",10}\");\n  Console.WriteLine(\" \"); \n  foreach (var item in inventory)\n     Console.WriteLine($\"{item.Key,-25}     {item.Value,10}\");\n```\n\n<span data-ttu-id=\"41005-169\">Los nombres de elemento están alineados a la izquierda y sus cantidades están alineadas a la derecha.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-169\">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id=\"41005-170\">Para especificar la alineación, se agrega una coma (\",\") después de la expresión y se designa el ancho de campo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-170\">You specify the alignment by adding a comma (\",\") after the expression and designating the field width.</span></span> <span data-ttu-id=\"41005-171\">Si el ancho de campo es un número positivo, el campo está alineado a la derecha:</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-171\">If the field width is a positive number, the field is right-aligned:</span></span>\n\n```text\n{expression, width}\n```\n\n<span data-ttu-id=\"41005-172\">Si el ancho de campo es un número negativo, el campo está alineado a la izquierda:</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-172\">If the field width is a negative number, the field is left-aligned:</span></span>\n\n```text\n{expression, -width}\n```\n<span data-ttu-id=\"41005-173\">Pruebe a quitar el signo negativo de las expresiones interpoladas `{\"Item\",-25}` y `{item.Key,-25}`, y vuelva a ejecutar el ejemplo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-173\">Try removing the negative signs from the `{\"Item\",-25}` and `{item.Key,-25}` interpolated expressions and run the example again.</span></span> <span data-ttu-id=\"41005-174\">En esta ocasión, el nombre de elemento está alineado a la derecha.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-174\">This time, the item name is right-aligned.</span></span>\n\n<span data-ttu-id=\"41005-175\">Puede combinar un ancho de campo y una cadena de formato en una única expresión interpolada.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-175\">You can combine a field width and a format string in a single interpolated expression.</span></span> <span data-ttu-id=\"41005-176\">El ancho de campo se muestra primero, seguido de dos puntos y la cadena de formato.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-176\">The field width comes first, followed by a colon and the format string.</span></span> <span data-ttu-id=\"41005-177\">Pruebe el siguiente programa sencillo que muestra tres cadenas con formato con los anchos de campo definidos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-177\">Try the following simple program that displays three formatted strings with defined field widths.</span></span>\n\n```csharp\nConsole.WriteLine($\"{DateTime.Now,-20:d} Hour {DateTime.Now,-10:HH} {1063.342,15:N2} feet\");\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"41005-178\">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-178\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"41005-179\">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-179\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- content: "<span data-ttu-id=\"41005-180\">Ha completado el inicio rápido sobre cadenas interpoladas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-180\">You've completed the interpolated strings quickstart.</span></span> \n\n<span data-ttu-id=\"41005-181\">Puede continuar con estos inicios rápidos en su entorno de desarrollo local.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-181\">You can continue these quickstarts on your own local development environment.</span></span> <span data-ttu-id=\"41005-182\">Eche un vistazo a los conceptos básicos sobre [desarrollo local](local-environment.md) y después seleccione un inicio rápido.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-182\">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id=\"41005-183\">Puede realizar este mismo ejercicio: vaya directamente al siguiente inicio rápido o vuelva a empezar con el inicio rápido sobre [números en C#](numbers-in-csharp-local.md).</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-183\">You can try this same exercise, move directly to the next quickstart, or start again with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"41005-184\">Para aprender más sobre cadenas interpoladas, eche un vistazo al tema [Interpolación de cadenas](../language-reference/tokens/interpolated.md) en la referencia de C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"41005-184\">You can learn more about interpolated strings in the [String interpolation](../language-reference/tokens/interpolated.md) topic in the C# Reference.</span></span>"
