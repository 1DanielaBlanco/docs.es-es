documentType: Tutorial
title: <span data-ttu-id="ed590-101">Bifurcaciones y bucles</span><span class="sxs-lookup"><span data-stu-id="ed590-101">Branches and loops</span></span>
metadata:
  title: Bifurcaciones y bucles
  description: "En este inicio rápido acerca de bifurcaciones y bucles, deberá usar el explorador para aprender C# de forma interactiva. Deberá escribir código C# y ver los resultados de compilación y ejecutar el código directamente en el explorador."
  audience: Developer
  level: Beginner
  ms.custom: mvc
  displayType: two-column
  interactive: csharp
  nextTutorialHref: arrays-and-collections
  nextTutorialTitle: <span data-ttu-id="ed590-105">Matrices y colecciones en C#</span><span class="sxs-lookup"><span data-stu-id="ed590-105">Arrays and collections in C#</span></span>
items:
- durationInMinutes: 1
  content: "<span data-ttu-id=\"ed590-106\">Este tutorial le enseña a escribir código que examina las variables y cambia la ruta de acceso de ejecución en función de esas variables.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-106\">This quick start teaches you how to write code that examines variables and changes execution path based on those variables.</span></span> <span data-ttu-id=\"ed590-107\">Deberá usar el explorador para escribir C# de forma interactiva y ver los resultados de compilación y ejecución del código.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-107\">You'll use your browser to write C# interactively and see the results of compiling and running your code.</span></span> <span data-ttu-id=\"ed590-108\">Este inicio rápido contiene una serie de lecciones que explorar bifurcación y construcciones de bucles en C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-108\">This quick start contains a series of lessons that explore branching and looping constructs in C#.</span></span> <span data-ttu-id=\"ed590-109\">En ellas se enseñan los aspectos básicos del lenguaje C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-109\">These lessons teach you the fundamentals of the C# language.</span></span>\n"
  ms.openlocfilehash: d86203d6e95f82f9db355b087e9abc669ffffac8
  ms.sourcegitcommit: 43c656811dd38a66a6672084c65d10c0cbbf2015
  ms.translationtype: HT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/22/2017
- title: "<span data-ttu-id=\"ed590-110\">Toma de decisiones con la instrucción if</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-110\">Make decisions using the if statement</span></span>"
  durationInMinutes: 4
  content: "<span data-ttu-id=\"ed590-111\">Ejecute el código siguiente en la ventana interactiva.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-111\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"ed590-112\">Para ello, escriba el siguiente bloque de código en la ventana interactiva y haga clic en el botón **Ejecutar**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-112\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 5;\nint b = 6;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10.\");\n```\n\n<span data-ttu-id=\"ed590-113\">Modifique la declaración de `b` para que el resultado de la suma sea menor que diez:</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-113\">Modify the declaration of `b` so that the sum is less than 10:</span></span> \n\n```csharp\nint b = 3;\n```\n\n<span data-ttu-id=\"ed590-114\">Vuelva a hacer clic en el botón **Ejecutar**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-114\">Click the **Run** button again.</span></span> <span data-ttu-id=\"ed590-115\">Como la respuesta es menor que diez, no se imprime nada.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-115\">Because the answer is less than 10, nothing is printed.</span></span> <span data-ttu-id=\"ed590-116\">La **condición** que está probando es false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-116\">The **condition** you're testing is false.</span></span> <span data-ttu-id=\"ed590-117\">No tiene ningún código para ejecutar porque solo ha escrito una de las bifurcaciones posibles para una instrucción `if`: la bifurcación true.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-117\">You don't have any code to execute because you've only written one of the possible branches for an `if` statement: the true branch.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"ed590-118\">Cuando explore C# o cualquier otro lenguaje de programación, cometerá errores al escribir código.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-118\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"ed590-119\">El **compilador** buscará dichos errores y los notificará.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-119\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"ed590-120\">Si la salida contiene mensajes de error, revise detenidamente el ejemplo de código y el código de la ventana interactiva para saber qué debe corregir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-120\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"ed590-121\">Este ejercicio le ayudará a aprender la estructura del código de C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-121\">That exercise will help you learn the structure of C# code.</span></span>     \n\n<span data-ttu-id=\"ed590-122\">En este primer ejemplo se muestran la potencia de `if` y los tipos booleanos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-122\">This first sample shows the power of `if` and boolean types.</span></span> <span data-ttu-id=\"ed590-123\">Un *booleano* es una variable que puede tener uno de estos dos valores: `true` o `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-123\">A *boolean* is a variable that can have one of two values: `true` or `false`.</span></span> <span data-ttu-id=\"ed590-124\">C# define un tipo especial `bool` para las variables booleanas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-124\">C# defines a special type, `bool` for boolean variables.</span></span> <span data-ttu-id=\"ed590-125\">La instrucción `if` comprueba el valor de `bool`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-125\">The `if` statement checks the value of a `bool`.</span></span> <span data-ttu-id=\"ed590-126\">Cuando el valor es `true`, se ejecuta la instrucción que sigue a `if`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-126\">When the value is `true`, the statement following the `if` executes.</span></span> <span data-ttu-id=\"ed590-127\">De lo contrario, se omite.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-127\">Otherwise, it is skipped.</span></span> \n\n<span data-ttu-id=\"ed590-128\">Este proceso de comprobación de condiciones y ejecución de instrucciones en función de esas condiciones es muy eficaz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-128\">This process of checking conditions and executing statements based on those conditions is very powerful.</span></span> <span data-ttu-id=\"ed590-129\">Indaguemos más.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-129\">Let's explore more.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"ed590-130\">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-130\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"ed590-131\">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-131\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="ed590-132">Operaciones conjuntas con if y else</span><span class="sxs-lookup"><span data-stu-id="ed590-132">Make if and else work together</span></span>
  durationInMinutes: 10
  content: "\n<span data-ttu-id=\"ed590-133\">Para ejecutar un código distinto en las bifurcaciones true y false, cree una bifurcación `else` para que se ejecute cuando la condición sea false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-133\">To execute different code in both the true and false branches, you create an `else` branch that executes when the condition is false.</span></span> <span data-ttu-id=\"ed590-134\">Pruebe esto:</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-134\">Try this:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10\");\nelse\n    Console.WriteLine(\"The answer is not greater than 10\");\n```\n\n<span data-ttu-id=\"ed590-135\">La instrucción que sigue a la palabra clave `else` se ejecuta solo si la condición de prueba es `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-135\">The statement following the `else` keyword executes only when the condition being tested is `false`.</span></span> <span data-ttu-id=\"ed590-136\">La combinación de `if` y `else` con condiciones booleanas ofrece toda la eficacia necesaria.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-136\">Combining `if` and `else` with boolean conditions provides all the power you need.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"ed590-137\">La sangría debajo de las instrucciones `if` y `else` se utiliza para los lectores humanos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-137\">The indentation under the `if` and `else` statements is for human readers.</span></span>\n> <span data-ttu-id=\"ed590-138\">El lenguaje C# no considera significativos los espacios en blanco ni las sangrías.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-138\">The C# language doesn't treat indentation or whitespace as significant.</span></span> <span data-ttu-id=\"ed590-139\">La instrucción que sigue a la palabra clave `if` o `else` se ejecutará en función de la condición.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-139\">The statement following the `if` or `else` keyword will be executed based on the condition.</span></span> <span data-ttu-id=\"ed590-140\">Todos los ejemplos de esta guía de inicio rápido siguen una práctica común para aplicar sangría a líneas basándose en el flujo de control de las instrucciones.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-140\">All the samples in this quick start follow a common practice to indent lines based on the control flow of statements.</span></span>\n\n<span data-ttu-id=\"ed590-141\">Dado que la sangría no es significativa, debe usar `{` y `}` para indicar si desea que más de una instrucción forme parte del bloque que se ejecuta de forma condicional.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-141\">Because indentation is not significant, you need to use `{` and `}` to indicate when you want more than one statement to be part of the block that executes conditionally.</span></span> <span data-ttu-id=\"ed590-142\">Los programadores de C# suelen usar esas llaves en todas las cláusulas `if` y `else`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-142\">C# programmers typically use those braces on all `if` and `else` clauses.</span></span> <span data-ttu-id=\"ed590-143\">El siguiente ejemplo es igual al que acaba de crear.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-143\">The following example is the same as what you just created.</span></span> <span data-ttu-id=\"ed590-144\">Pruébelo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-144\">Try it.</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n}\n```\n\n> [!TIP]\n> <span data-ttu-id=\"ed590-145\">A través del resto de esta guía de inicio rápido, todas las muestras de código incluyen las llaves, siga aceptado prácticas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-145\">Through the rest of this quick start, the code samples all include the braces, following accepted practices.</span></span>\n\n<span data-ttu-id=\"ed590-146\">Puede probar condiciones más complicadas:</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-146\">You can test more complicated conditions:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) && (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"And the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"Or the first number is not greater than the second\");\n}\n```\n\n<span data-ttu-id=\"ed590-147\">`&&` representa \"y\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-147\">The `&&` represents \"and\".</span></span> <span data-ttu-id=\"ed590-148\">Significa que ambas condiciones deben cumplirse para ejecutar la instrucción en la bifurcación true.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-148\">It means both conditions must be true to execute the statement in the true branch.</span></span>  <span data-ttu-id=\"ed590-149\">En estos ejemplos también se muestra que puede tener varias instrucciones en cada bifurcación condicional, siempre que las encierre entre `{` y `}`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-149\">These examples also show that you can have multiple statements in each conditional branch, provided you enclose them in `{` and `}`.</span></span>\n\n<span data-ttu-id=\"ed590-150\">También puede usar `||` para representar \"o\":</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-150\">You can also use  `||` to represent \"or\":</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) || (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"Or the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"And the first number is not greater than the second\");\n}\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"ed590-151\">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-151\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"ed590-152\">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-152\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="ed590-153">Uso de bucles para repetir las operaciones</span><span class="sxs-lookup"><span data-stu-id="ed590-153">Use loops to repeat operations</span></span>
  durationInMinutes: 6
  content: "<span data-ttu-id=\"ed590-154\">El **bucle** es otro concepto importante para crear programas más grandes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-154\">Another important concept to create larger programs is **loops**.</span></span> <span data-ttu-id=\"ed590-155\">Debe usar bucles para repetir las instrucciones que desee que se ejecuten más de una vez.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-155\">You'll use loops to repeat statements that you want executed more than once.</span></span> <span data-ttu-id=\"ed590-156\">Pruebe el código siguiente en la ventana interactiva:</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-156\">Try this code in the interactive window:</span></span>\n\n```csharp\nint counter = 0;\nwhile (counter < 10)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n}\n```\n\n<span data-ttu-id=\"ed590-157\">La instrucción `while` comprueba una condición y ejecuta la instrucción que aparece después de `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-157\">The `while` statement checks a condition and executes the statement following the `while`.</span></span> <span data-ttu-id=\"ed590-158\">La comprobación de la condición y la ejecución de dichas instrucciones se repetirán hasta que la condición sea false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-158\">It will repeat checking the condition and executing those statements until the condition is false.</span></span>\n\n<span data-ttu-id=\"ed590-159\">En este ejemplo aparece otro operador nuevo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-159\">There's one other new operator in this example.</span></span> <span data-ttu-id=\"ed590-160\">El código `++` que aparece después de la variable `counter` es el operador de **incremento**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-160\">The `++` after the `counter` variable is the **increment** operator.</span></span> <span data-ttu-id=\"ed590-161\">Suma un valor de uno al valor del contador y almacena dicho valor en la variable del contador.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-161\">It adds 1 to the value of counter, and stores that value in the counter variable.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"ed590-162\">Asegúrese de que la condición del bucle `while` no cambia a false mientras ejecuta el código.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-162\">Make sure that the `while` loop condition does switch to false as you execute the code.</span></span> <span data-ttu-id=\"ed590-163\">En caso contrario, se crea un **bucle infinito** donde nunca finaliza el programa.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-163\">Otherwise, you create an **infinite loop** where your program never ends.</span></span> <span data-ttu-id=\"ed590-164\">Eso no lo vamos a demostrar, porque el motor que ejecuta el código agotará el tiempo de espera y el programa no generará ninguna salida.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-164\">Let's not demonstrate that, because the engine that runs your code will time out and you'll see no output from your program.</span></span>\n\n<span data-ttu-id=\"ed590-165\">El bucle `while` prueba la condición antes de ejecutar el código que sigue a `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-165\">The `while` loop tests the condition before executing the code following the `while`.</span></span> <span data-ttu-id=\"ed590-166\">El bucle `do` ... `while` primero ejecuta el código y después comprueba la condición.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-166\">The `do` ... `while` loop executes the code first, and then checks the condition.</span></span> <span data-ttu-id=\"ed590-167\">Tiene el siguiente aspecto:</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-167\">It looks like this:</span></span>\n\n```csharp\nint counter = 0;\ndo\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n} while (counter < 10);\n```\n\n<span data-ttu-id=\"ed590-168\">Este bucle `do` y el bucle `while` anterior funcionan de la misma forma.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-168\">This `do` loop and the earlier `while` loop work the same.</span></span> \n\n<span data-ttu-id=\"ed590-169\">Ahora vamos a pasar a una última instrucción del bucle.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-169\">Let's move on to one last loop statement.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"ed590-170\">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-170\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"ed590-171\">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-171\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="ed590-172">Operaciones con el bucle for</span><span class="sxs-lookup"><span data-stu-id="ed590-172">Work with the for loop</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"ed590-173\">El bucle `for` es otra instrucción de bucle común que verá en el código de C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-173\">Another common loop statement that you'll see in C# code is the `for` loop.</span></span> <span data-ttu-id=\"ed590-174\">Pruebe el código siguiente en la ventana interactiva:</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-174\">Try this code in the interactive window:</span></span>\n\n```csharp\nfor(int counter = 0; counter < 10; counter++)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n} \n```\n\n<span data-ttu-id=\"ed590-175\">Funciona de la misma forma que los bucles `while` y `do` que ya ha usado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-175\">This does the same work as the `while` loop and the `do` loop you've already used.</span></span> <span data-ttu-id=\"ed590-176\">La instrucción `for` consta de tres partes que controlan su funcionamiento.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-176\">The `for` statement has three parts that control how it works.</span></span> \n\n<span data-ttu-id=\"ed590-177\">La primera parte es el **inicializador de for**: `for counter = 0;` declara que `counter` es la variable de bucle y establece su valor inicial en `0`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-177\">The first part is the **for initializer**: `for counter = 0;` declares that `counter` is the loop variable, and sets its initial value to `0`.</span></span>\n\n<span data-ttu-id=\"ed590-178\">La parte central es la **condición de for**: `counter < 10` declara que este bucle `for` debe continuar ejecutándose mientras que el valor del contador sea menor que diez.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-178\">The middle part is the **for condition**: `counter < 10` declares that this `for` loop continues to execute as long as the value of counter is less than 10.</span></span>\n\n<span data-ttu-id=\"ed590-179\">La última parte es el **iterador de for**: `counter++` especifica cómo modificar la variable de bucle después de ejecutar el bloque que sigue a la instrucción `for`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-179\">The final part is the **for iterator**: `counter++` specifies how to modify the loop variable after executing the block following the `for` statement.</span></span> <span data-ttu-id=\"ed590-180\">En este caso, especifica que `counter` debe incrementarse en uno cada vez que el bloque se ejecuta.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-180\">Here, it specifies that `counter` should be incremented by 1 each time the block executes.</span></span>\n\n<span data-ttu-id=\"ed590-181\">Experimente con estas partes por su cuenta.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-181\">Experiment with these yourself.</span></span> <span data-ttu-id=\"ed590-182\">Pruebe todos los pasos siguientes:</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-182\">Try each of the following:</span></span>\n\n- <span data-ttu-id=\"ed590-183\">Cambie el inicializador para que se inicie en un valor distinto.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-183\">Change the initializer to start at a different value.</span></span>\n- <span data-ttu-id=\"ed590-184\">Cambie la condición para que se detenga en un valor diferente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-184\">Change the condition to stop at a different value.</span></span>\n\n<span data-ttu-id=\"ed590-185\">Cuando haya terminado, escriba algo de código para practicar con lo que ha aprendido.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-185\">When you're done, let's move on to write some code yourself to use what you've learned.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"ed590-186\">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-186\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"ed590-187\">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-187\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="ed590-188">Combinar bifurcaciones y bucles</span><span class="sxs-lookup"><span data-stu-id="ed590-188">Combine branches and loops</span></span>
  durationInMinutes: 12
  content: "<span data-ttu-id=\"ed590-189\">Ahora que ya ha obtenido la información sobre el bucle `if` y las construcciones de bucles con el lenguaje C#, trate de escribir código de C# para obtener la suma de todos los enteros de uno a veinte que se puedan dividir entre tres.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-189\">Now that you've seen the `if` statement and the looping constructs in the C# language, see if you can write C# code to find the sum of all integers 1 through 20 that are divisible by 3.</span></span>  <span data-ttu-id=\"ed590-190\">Tenga en cuenta las siguientes sugerencias:</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-190\">Here are a few hints:</span></span>\n\n- <span data-ttu-id=\"ed590-191\">El operador `%` proporciona el resto de una operación de división.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-191\">The `%` operator gives you the remainder of a division operation.</span></span>\n- <span data-ttu-id=\"ed590-192\">La instrucción `if` genera la condición para saber si un número debe formar parte de la suma.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-192\">The `if` statement givesx you the condition to see if a number should be part of the sum.</span></span>\n- <span data-ttu-id=\"ed590-193\">El bucle `for` puede facilitar la repetición de una serie de pasos para todos los números comprendidos entre el uno y el veinte.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-193\">The `for` loop can help you repeat a series of steps for all the numbers 1 through 20.</span></span>\n\n<span data-ttu-id=\"ed590-194\">Pruébelo usted mismo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-194\">Try it yourself.</span></span> <span data-ttu-id=\"ed590-195\">Después, revise cómo lo ha hecho.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-195\">Then check how you did.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"ed590-196\">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-196\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"ed590-197\">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-197\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"ed590-198\">Desafío completo</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-198\">Complete challenge</span></span>"
  durationInMinutes: 1
  content: "<span data-ttu-id=\"ed590-199\">Ha completado el inicio rápido \"bifurcaciones y bucles\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-199\">You've completed the \"branches and loops\" quick start.</span></span> \n\n<span data-ttu-id=\"ed590-200\">Puede seguir estas guías rápidas en su propio entorno de desarrollo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-200\">You can continue these quick starts on your own development environment.</span></span> <span data-ttu-id=\"ed590-201\">El tema de .NET [empezar a trabajar en 10 minutos](https://www.microsoft.com/net/core) tiene instrucciones sobre cómo configurar el entorno de desarrollo local.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-201\">The .NET topic [Get Started in 10 minutes](https://www.microsoft.com/net/core) has instructions for setting up your local development environment.</span></span> <span data-ttu-id=\"ed590-202\">Una vez hecho esto, continúe con [inicio rápido de colección de lista](arrays-and-collections.md) en su entorno local.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-202\">Once you've done that, continue with [List collection quickstart](arrays-and-collections.md) in your local environment.</span></span>\n\n<span data-ttu-id=\"ed590-203\">Puede obtener más información sobre estos conceptos en los temas siguientes:</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-203\">You can learn more about these concepts in these topics:</span></span>\n\n<span data-ttu-id=\"ed590-204\">[Instrucciones If y else](../language-reference/keywords/if-else.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-204\">[If and else statement](../language-reference/keywords/if-else.md) </span></span>  \n<span data-ttu-id=\"ed590-205\">[Instrucción while](../language-reference/keywords/while.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-205\">[While statement](../language-reference/keywords/while.md) </span></span>  \n<span data-ttu-id=\"ed590-206\">[Instrucción do](../language-reference/keywords/do.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-206\">[Do statement](../language-reference/keywords/do.md) </span></span>  \n[<span data-ttu-id=\"ed590-207\">Instrucción for</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed590-207\">For statement</span></span>](../language-reference/keywords/for.md)\0"
